1. Pseudocode: How I Done Dididly Done It 
-have 3 variables for user input for number of links, frames, and wheels
-have 1 variable for number of bikes that can be made, initialized to 0
-in main: ask for and read the 3 user inputs, then call the following 
 function
-function that calculates number of bikes (use function so I can use recursion)
    -returns nothing
    -take these three numbers (frames, wheels, links) as parameters,
     set conditionals:   
    -if there are at least 1 frame, 2 wheels, and 50 links, then num
     of bikes increase by 1, num of frame decreases by 1, wheels decrease
     by 2, links decrease by 50, then call function again (recursion)
    -else, none of the values change (base case) and:
    -will print a statement telling how many bikes there are, and how 
     many of each part is left, using the function below: 
-have a function that changes the singularity/plurality of a given word
    -takes a string (to be modified) and an int (how many parts there are)
    -if int is not 1, function will modify the string by 
     concatenating "s" to the end and return it
    -if int is 1, function will return the string unmodified

2. Style Sally Super Star

#include <iostream>

using namespace std;

int main()
{ 
    int age = 50;
    age = age + 50;
    string name = "Sally";
    string job = "Super Star";
    
    if (name == "Sally" && job == "Super Star")
    {
        cout << "Hi Sally" << endl;
        cout << "You are a super star!!" << endl;
    
        if (age == 100 || (age != 42 && name != job))
        { 
            cout<< "Have a nice day!" << endl;
        }
    }
     
    else
    {
        cout << "This isn't Sally...Goodbye!!" << endl;
    }

    return 0;
}
    
3. Testing, testing, 1, 2, 3
-I tested with each letter 'p', 's', and 'r' (those worked). 
-I added the JFFE part, and to test that I entered random letters that weren't
'p', 's', or 'r' (the conditional also worked). 
-Then I tested uppercase 'P', 'S', 'R'-- but I had forgotten to add tolower(), 
so the conditional statement didn't recognize the uppercase and asked me to 
enter again. I fixed this by using tolower() before I run the input through
the conditional statement. 
-I tested those 3 uppercase letters separately again, but the conditional 
statement still didn't recognize that the 3 specific (upper- or lowercase) 
letters are acceptable cases, which confused me. After running it a few times, 
I realized that my logical error was that I used the "or" operator instead 
of the "and" operator, so whatever (valid or invalid) input I entered was 
going to be evaluated to false. I changed the operator to "and" and this worked.
    
4. Time
I spent around 4 hours total. Took me a night of sleep to able to think
clearly through the pseudocode for coding task #4, but when I finally 
implemented it, it worked rather smoothly (just syntax errors). 
    
    
    